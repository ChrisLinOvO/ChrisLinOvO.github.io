<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on Chris Lin&#39;s Blog</title>
    <link>https://ChrisLinOvO.github.io/categories/notes/</link>
    <description>Recent content in Notes on Chris Lin&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Tue, 07 Nov 2023 18:00:00 +0800</lastBuildDate><atom:link href="https://ChrisLinOvO.github.io/categories/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>React Testing Enzyme</title>
      <link>https://ChrisLinOvO.github.io/blogs/2023/11/react-testing-enzyme/</link>
      <pubDate>Tue, 07 Nov 2023 18:00:00 +0800</pubDate>
      
      <guid>https://ChrisLinOvO.github.io/blogs/2023/11/react-testing-enzyme/</guid>
      <description>前言 React Testing Enzyme 主要介紹幾個方法：shallow、render、mount。
函數 渲染範圍 子元件渲染 事件模擬 shallow 只渲染元件本身 不渲染子元件 支援事件模擬 render 產生靜態 HTML 字串 不在真實 DOM 渲染 不支援事件模擬 mount 渲染整個 React 樹 渲染所有子元件 支援事件模擬 範例 使用shallow函數： 情境：測試一個 React 按鈕元件的點擊事件處理，而不需要渲染其子元件。</description>
    </item>
    
    <item>
      <title>React Testing Library</title>
      <link>https://ChrisLinOvO.github.io/blogs/2023/11/react-testing-library/</link>
      <pubDate>Tue, 07 Nov 2023 16:00:00 +0800</pubDate>
      
      <guid>https://ChrisLinOvO.github.io/blogs/2023/11/react-testing-library/</guid>
      <description>前言 React Testing Library 主要提供幾個方法：render、fireEvent、screen、waitFor。
前置設定需搭配 @testing-library/jest-dom。
什麼時候該用此 Library 可參考官方Solution render 用於渲染 React 組件到虛擬 DOM 中，並返回一個包含渲染結果的容器對象。</description>
    </item>
    
    <item>
      <title>React Hooks Testing Library</title>
      <link>https://ChrisLinOvO.github.io/blogs/2023/11/react-hooks-testing-library/</link>
      <pubDate>Tue, 07 Nov 2023 14:00:00 +0800</pubDate>
      
      <guid>https://ChrisLinOvO.github.io/blogs/2023/11/react-hooks-testing-library/</guid>
      <description>前言 React Hooks Testing Library 主要提供三個方法：renderHook、act、cleanup。
什麼時候該用此 Library 官方Solution 使用</description>
    </item>
    
    <item>
      <title>物業系統</title>
      <link>https://ChrisLinOvO.github.io/blogs/2023/11/property-notes/</link>
      <pubDate>Tue, 07 Nov 2023 10:00:00 +0800</pubDate>
      
      <guid>https://ChrisLinOvO.github.io/blogs/2023/11/property-notes/</guid>
      <description>前言 這是一個物業管理，其中也有硬體端整合，這套系統從零到現在正式上線，我全程參與，包含事前規劃流程設計、UI討論。
技術架構 前後端分離，前端用 React.js 開發及 icejs+(fusion/antd)UI，完成管理者後台介面及 APP 使用者介面 使用 Feathers 框架創建 REST API 和 WebSocket 與後端溝通，帳號權限處理、帳號登入登出機制 資料庫使用 MongoDB 使用 Docker-compose 部屬到公司購買實體主機 功能介紹 使用者APP介面 帳號設置：綁定社區、QRCode掃描或帳密登入建立帳號。</description>
    </item>
    
    <item>
      <title>Heroku 轉移至 Fly.io </title>
      <link>https://ChrisLinOvO.github.io/blogs/2023/10/heroku-to-flyio/</link>
      <pubDate>Sun, 29 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ChrisLinOvO.github.io/blogs/2023/10/heroku-to-flyio/</guid>
      <description>前言 由於 Heroku 取消了免費的服務&amp;hellip;個人作品都壞掉了，因此換成 Fly.io 部署
在 Ｆly.io 建立專案 步驟 1：安裝 flyctl 這裡教學以 macOS 為例，可參考 官網 。</description>
    </item>
    
    <item>
      <title>解決 Hugo Markdown 連結無法另開網頁問題</title>
      <link>https://ChrisLinOvO.github.io/blogs/2023/10/target-blank-logo/</link>
      <pubDate>Fri, 27 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://ChrisLinOvO.github.io/blogs/2023/10/target-blank-logo/</guid>
      <description>前言 在寫 Markdown 文章時候，想要為 link 添加 {target=&amp;quot;_blank&amp;quot;} 屬性參考文章，但卻起不了作用(會變字串)。
這是一個連結[網站](http://example.com){target=&amp;#34;_blank&amp;#34;}的示例。 這是在猜想可能是 Hugo 版本不相容，就用上網找了解法，他說：Hugo 的安全模式可能會阻止執行 JavaScript。在安全模式下，Hugo 默認會禁用 JavaScript 和某些 HTML 標籤以增加網站的安全性。</description>
    </item>
    
    <item>
      <title>Google Analytics 4 介紹</title>
      <link>https://ChrisLinOvO.github.io/blogs/2023/10/google-analytics-introduction/</link>
      <pubDate>Wed, 25 Oct 2023 20:00:00 +0800</pubDate>
      
      <guid>https://ChrisLinOvO.github.io/blogs/2023/10/google-analytics-introduction/</guid>
      <description>前言 介紹通用版 GA 與 GA4 差異 通用版 GA：追蹤網頁資料為核心。
GA4：事件為核心。
這個簡單的表格比較了通用版 GA 和 GA4 在數據收集方式、用戶跟踪、報告功能、用戶隱私和未來支持等方面的主要差異。</description>
    </item>
    
  </channel>
</rss>
